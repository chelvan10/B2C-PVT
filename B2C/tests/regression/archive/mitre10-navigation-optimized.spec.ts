// AUTOGENERATED: Optimized Mitre 10 navigation test suite with recommendations - 2025-01-28
import { test, expect } from '@playwright/test';
import { BrowserUtils } from '../../utils/browser-utils.js';

test.describe('🌐 Mitre 10 Optimized Navigation & Content Validation', () => {
  
  test.beforeEach(async ({ page }) => {
    await BrowserUtils.handlePopups(page);
  });

  test('🏠 Homepage navigation exploration', async ({ page }) => {
    await test.step('🌐 Navigate to Mitre 10 homepage', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await page.waitForLoadState('domcontentloaded'); // Recommendation 1: Use domcontentloaded
      await BrowserUtils.waitForStableLoad(page, 4000); // Shorter timeout
      await expect(page).toHaveTitle(/Mitre 10/);
    });

    await test.step('🔍 Explore available navigation options', async () => {
      const navOptions = [
        'Departments', 'Services', 'Club', 'Inspiration', 'Easy As', 'Guides', 'Trade'
      ];
      
      let foundNavItems = 0;
      for (const option of navOptions) {
        const navLink = page.getByRole('link', { name: new RegExp(option, 'i') }).first();
        if (await navLink.isVisible({ timeout: 2000 }).catch(() => false)) {
          console.log(`✅ Found navigation: ${option}`);
          foundNavItems++;
        }
      }
      
      expect(foundNavItems).toBeGreaterThan(0);
      console.log(`✅ Found ${foundNavItems} navigation items`);
    });
  });

  test('🎨 Dreamzone/Inspiration page validation', async ({ page }) => {
    await test.step('🌐 Navigate to Inspiration/Dreamzone', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await page.waitForLoadState('domcontentloaded');
      
      const inspirationSelectors = [
        page.getByRole('link', { name: /inspiration/i }),
        page.getByRole('link', { name: /dreamzone/i }),
        page.getByRole('link', { name: /ideas/i })
      ];
      
      let navigated = false;
      for (const selector of inspirationSelectors) {
        if (await selector.first().isVisible({ timeout: 2000 }).catch(() => false)) {
          await selector.first().click();
          navigated = true;
          break;
        }
      }
      
      if (!navigated) {
        await page.goto('https://www.mitre10.co.nz/dreamzone');
      }
    });

    await test.step('🖼️ Verify content and media', async () => {
      await page.waitForLoadState('domcontentloaded'); // Recommendation 1: domcontentloaded only
      await page.waitForTimeout(3000); // Recommendation 2: Shorter fixed timeout
      
      const images = page.locator('img');
      const imageCount = await images.count();
      
      if (imageCount > 0) {
        let loadedImages = 0;
        for (let i = 0; i < Math.min(5, imageCount); i++) {
          const img = images.nth(i);
          const naturalWidth = await img.evaluate((el: HTMLImageElement) => el.naturalWidth).catch(() => 0);
          if (naturalWidth > 0) {
            loadedImages++;
          }
        }
        console.log(`✅ ${loadedImages}/${Math.min(5, imageCount)} images loaded`);
      }
      
      const contentElements = page.locator('main, .content, .page-content, article').first();
      await expect(contentElements).toBeVisible({ timeout: 3000 });
      console.log('✅ Inspiration/Dreamzone content validated');
    });
  });

  test('🏆 Club page navigation and functionality', async ({ page }) => {
    await test.step('🌐 Navigate to Club page', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await page.waitForLoadState('domcontentloaded');
      
      const clubLink = page.getByRole('link', { name: /club/i }).first();
      if (await clubLink.isVisible({ timeout: 3000 }).catch(() => false)) {
        await clubLink.click();
      } else {
        await page.goto('https://www.mitre10.co.nz/club');
      }
    });

    await test.step('📋 Verify Club page and interactive elements', async () => {
      await page.waitForLoadState('domcontentloaded'); // Recommendation 1
      await page.waitForTimeout(2000); // Recommendation 2: Shorter timeout
      
      // Recommendation 4: Page-specific validation logic for Club tabs
      const clubTabSelectors = [
        '.club-tab, .membership-tab',
        '[data-tab*="club"], [data-tab*="member"]',
        'button[aria-controls*="club"], button[aria-controls*="member"]',
        '.nav-pills .nav-link, .nav-tabs .nav-link'
      ];
      
      let tabsFound = 0;
      for (const selector of clubTabSelectors) {
        const tabs = page.locator(selector);
        const count = await tabs.count();
        if (count > 0) {
          tabsFound += count;
          console.log(`✅ Found ${count} club-specific elements: ${selector}`);
          
          // Test clicking first few tabs
          for (let i = 0; i < Math.min(2, count); i++) {
            const tab = tabs.nth(i);
            if (await tab.isVisible({ timeout: 1000 }).catch(() => false)) {
              await tab.click();
              await page.waitForTimeout(500);
            }
          }
        }
      }
      
      console.log(`✅ Club page validated with ${tabsFound} interactive elements`);
    });
  });

  test('🔧 Services page validation', async ({ page }) => {
    await test.step('🌐 Navigate to Services page', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await page.waitForLoadState('domcontentloaded');
      
      const servicesLink = page.getByRole('link', { name: /services/i }).first();
      if (await servicesLink.isVisible({ timeout: 3000 }).catch(() => false)) {
        await servicesLink.click();
      } else {
        await page.goto('https://www.mitre10.co.nz/services');
      }
    });

    await test.step('🔗 Validate Services content', async () => {
      await page.waitForLoadState('domcontentloaded'); // Recommendation 1
      await page.waitForTimeout(2000); // Recommendation 2: Shorter timeout
      
      // Recommendation 4: Services-specific validation logic
      const serviceSelectors = [
        'a[href*="service"], a[href*="hire"]',
        '.service-card, .service-item',
        '[data-service], [class*="service"]',
        '.hire-service, .installation-service'
      ];
      
      let serviceElements = 0;
      for (const selector of serviceSelectors) {
        const elements = page.locator(selector);
        const count = await elements.count();
        if (count > 0) {
          serviceElements += count;
          console.log(`✅ Found ${count} service elements: ${selector}`);
        }
      }
      
      console.log(`✅ Found ${serviceElements} total service-related elements`);
      
      const mainContent = page.locator('main, .content, .page-content, body').first();
      await expect(mainContent).toBeVisible({ timeout: 3000 });
      console.log('✅ Services page content validated');
    });
  });

  test('🏢 Trade page comprehensive validation', async ({ page }) => {
    await test.step('🌐 Navigate to Trade page', async () => {
      await page.goto('https://www.mitre10.co.nz/trade');
      await page.waitForLoadState('domcontentloaded'); // Recommendation 1
      await BrowserUtils.waitForStableLoad(page, 4000); // Shorter timeout
    });

    await test.step('🔗 Validate Trade page structure and links', async () => {
      await expect(page).toHaveURL(/.*trade.*/);
      
      const tradeElements = page.locator('a[href*="trade"], a[href*="business"], [class*="trade"]');
      const elementCount = await tradeElements.count();
      
      console.log(`✅ Found ${elementCount} trade-related elements`);
      
      if (elementCount > 0) {
        for (let i = 0; i < Math.min(3, elementCount); i++) {
          const element = tradeElements.nth(i);
          const href = await element.getAttribute('href');
          if (href && href !== '#') {
            console.log(`✅ Trade link: ${href}`);
          }
        }
      }
      
      const pageContent = page.locator('main, .content, .page-content, body').first();
      await expect(pageContent).toBeVisible({ timeout: 3000 });
      console.log('✅ Trade page validated');
    });
  });

  test('📚 Guides and YouTube content exploration', async ({ page }) => {
    await test.step('🌐 Explore guides and content pages', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await page.waitForLoadState('domcontentloaded');
      
      const contentLinks = [
        page.getByRole('link', { name: /guides/i }),
        page.getByRole('link', { name: /easy as/i }),
        page.getByRole('link', { name: /help/i }),
        page.getByRole('link', { name: /how to/i })
      ];
      
      let foundContent = false;
      for (const link of contentLinks) {
        if (await link.first().isVisible({ timeout: 2000 }).catch(() => false)) {
          await link.first().click();
          foundContent = true;
          console.log(`✅ Navigated to content via: ${await link.first().textContent()}`);
          break;
        }
      }
      
      if (!foundContent) {
        console.log('ℹ️ No specific guides link found, checking current page content');
      }
    });

    await test.step('🎥 Check for multimedia content with specific YouTube detection', async () => {
      await page.waitForLoadState('domcontentloaded'); // Recommendation 1
      await page.waitForTimeout(3000); // Recommendation 2: Fixed timeout instead of networkidle
      
      // Recommendation 3: Specific selectors for YouTube video detection
      const youtubeSelectors = [
        'iframe[src*="youtube.com/embed"]',
        'iframe[src*="youtu.be"]',
        'iframe[data-src*="youtube"]',
        '.youtube-player, .video-youtube',
        '[class*="youtube"], [id*="youtube"]'
      ];
      
      let youtubeFound = 0;
      for (const selector of youtubeSelectors) {
        const videos = page.locator(selector);
        const count = await videos.count();
        if (count > 0) {
          youtubeFound += count;
          console.log(`✅ Found ${count} YouTube elements: ${selector}`);
          
          // Test interaction with first YouTube video
          const firstVideo = videos.first();
          if (await firstVideo.isVisible({ timeout: 2000 }).catch(() => false)) {
            const src = await firstVideo.getAttribute('src') || await firstVideo.getAttribute('data-src');
            console.log(`✅ YouTube video source: ${src}`);
            
            // Test video interaction
            await firstVideo.click();
            await page.waitForTimeout(1000);
            console.log('✅ YouTube video interaction tested');
          }
        }
      }
      
      // Check for other media types
      const otherMediaSelectors = [
        'video', 'iframe[src*="vimeo"]', '[class*="video"]:not([class*="youtube"])'
      ];
      
      let otherMediaFound = 0;
      for (const selector of otherMediaSelectors) {
        const media = page.locator(selector);
        const count = await media.count();
        if (count > 0) {
          otherMediaFound += count;
          console.log(`✅ Found ${count} other media elements: ${selector}`);
        }
      }
      
      console.log(`✅ Total media: ${youtubeFound} YouTube + ${otherMediaFound} other media`);
    });
  });

  test('🔗 Optimized link validation', async ({ page }) => {
    const testUrls = [
      'https://www.mitre10.co.nz/',
      'https://www.mitre10.co.nz/trade'
    ];

    for (const url of testUrls) {
      await test.step(`🔍 Testing links on ${url}`, async () => {
        await page.goto(url);
        await page.waitForLoadState('domcontentloaded'); // Recommendation 1
        await BrowserUtils.waitForStableLoad(page, 3000); // Recommendation 2: Shorter timeout
        
        const allLinks = page.locator('a[href]:not([href="#"]):not([href^="javascript:"])');
        const linkCount = await allLinks.count();
        
        if (linkCount > 0) {
          console.log(`✅ Found ${linkCount} valid links on ${url}`);
          
          // Test smaller random selection for faster execution
          const linksToTest = Math.min(3, linkCount); // Reduced from 5 to 3
          const testedLinks = new Set();
          
          for (let i = 0; i < linksToTest; i++) {
            let randomIndex;
            do {
              randomIndex = Math.floor(Math.random() * linkCount);
            } while (testedLinks.has(randomIndex));
            
            testedLinks.add(randomIndex);
            const link = allLinks.nth(randomIndex);
            
            const href = await link.getAttribute('href');
            const target = await link.getAttribute('target');
            
            if (href) {
              const isExternal = href.startsWith('http') && !href.includes('mitre10.co.nz');
              const opensNewTab = target === '_blank' || isExternal;
              
              console.log(`✅ ${opensNewTab ? 'External' : 'Internal'} link: ${href}`);
            }
          }
        }
      });
    }
  });

  test('🖼️ Optimized media and accessibility validation', async ({ page }) => {
    await test.step('🌐 Load homepage for media check', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await page.waitForLoadState('domcontentloaded'); // Recommendation 1
      await BrowserUtils.waitForStableLoad(page, 4000); // Recommendation 2: Shorter timeout
    });

    await test.step('🖼️ Validate images and media loading', async () => {
      const images = page.locator('img');
      const imageCount = await images.count();
      let loadedImages = 0;
      let imagesWithAlt = 0;
      
      // Check first 5 images for faster execution (reduced from 10)
      for (let i = 0; i < Math.min(5, imageCount); i++) {
        const img = images.nth(i);
        
        const naturalWidth = await img.evaluate((el: HTMLImageElement) => el.naturalWidth).catch(() => 0);
        if (naturalWidth > 0) {
          loadedImages++;
        }
        
        const alt = await img.getAttribute('alt');
        if (alt !== null) {
          imagesWithAlt++;
        }
      }
      
      console.log(`✅ Images: ${loadedImages}/${Math.min(5, imageCount)} loaded, ${imagesWithAlt} with alt text`);
      expect(loadedImages).toBeGreaterThan(0);
    });

    await test.step('🧭 Validate navigation accessibility', async () => {
      const navElements = page.locator('nav, [role="navigation"], .navigation, .nav');
      const navCount = await navElements.count();
      
      if (navCount > 0) {
        console.log(`✅ Found ${navCount} navigation elements`);
        
        const focusableElements = page.locator('a, button, input, select, textarea, [tabindex]:not([tabindex="-1"])');
        const focusableCount = await focusableElements.count();
        console.log(`✅ Found ${focusableCount} focusable elements`);
      }
      
      const footer = page.locator('footer, .footer, [role="contentinfo"]');
      const footerCount = await footer.count();
      if (footerCount > 0) {
        const footerLinks = footer.locator('a[href]');
        const footerLinkCount = await footerLinks.count();
        console.log(`✅ Footer contains ${footerLinkCount} links`);
      }
      
      console.log('✅ Navigation and accessibility validation completed');
    });
  });
});