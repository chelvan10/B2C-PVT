// AUTOGENERATED: Comprehensive Mitre 10 navigation test suite - 2025-01-28
import { test, expect } from '@playwright/test';
import { BrowserUtils } from '../../utils/browser-utils.js';

test.describe('🌐 Mitre 10 Comprehensive Navigation & Content Validation', () => {
  
  test.beforeEach(async ({ page }) => {
    await BrowserUtils.handlePopups(page);
  });

  test('🏠 Homepage to Departments navigation and validation', async ({ page }) => {
    await test.step('🌐 Navigate to Mitre 10 homepage', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await BrowserUtils.waitForStableLoad(page, 6000);
      await expect(page).toHaveTitle(/Mitre 10/);
    });

    await test.step('🏪 Navigate to Departments via main menu', async () => {
      const isMobile = await BrowserUtils.isMobile(page);
      
      if (isMobile) {
        const mobileMenu = page.locator('button[aria-label*="menu"], .hamburger, .menu-button').first();
        if (await mobileMenu.isVisible({ timeout: 3000 }).catch(() => false)) {
          await mobileMenu.click();
        }
      }
      
      const departmentsLink = page.getByRole('link', { name: /departments/i }).first();
      await expect(departmentsLink).toBeVisible({ timeout: 5000 });
      await departmentsLink.click();
    });

    await test.step('📋 Verify Departments page loads with categories', async () => {
      await page.waitForURL(/.*departments.*/, { timeout: 8000 });
      
      // Check for department categories
      const categories = [
        'Building & Hardware',
        'Garden & Outdoor',
        'Paint & Decorating',
        'Tools & Storage'
      ];
      
      for (const category of categories) {
        const categoryElement = page.getByText(category, { exact: false }).first();
        if (await categoryElement.isVisible({ timeout: 2000 }).catch(() => false)) {
          console.log(`✅ Found category: ${category}`);
        }
      }
      
      // Verify page structure
      await expect(page.locator('h1, .page-title, .departments-title').first()).toBeVisible();
      console.log('✅ Departments page loaded successfully');
    });
  });

  test('📚 Easy As Guides navigation and YouTube video validation', async ({ page }) => {
    await test.step('🌐 Navigate to Easy As Guides', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await BrowserUtils.waitForStableLoad(page, 6000);
      
      const guidesLink = page.getByRole('link', { name: /easy as guides|guides/i }).first();
      await expect(guidesLink).toBeVisible({ timeout: 5000 });
      await guidesLink.click();
    });

    await test.step('📖 Verify guides are visible', async () => {
      await page.waitForURL(/.*guides.*/, { timeout: 8000 });
      
      // Check for guide content
      const guideElements = page.locator('.guide, .article, .content-item, [class*="guide"]');
      const guideCount = await guideElements.count();
      expect(guideCount).toBeGreaterThan(0);
      console.log(`✅ Found ${guideCount} guide elements`);
    });

    await test.step('🎥 Validate YouTube videos and test playback', async () => {
      // Look for YouTube iframes or video elements
      const youtubeIframes = page.locator('iframe[src*="youtube"], iframe[src*="youtu.be"]');
      const videoCount = await youtubeIframes.count();
      
      if (videoCount > 0) {
        console.log(`✅ Found ${videoCount} YouTube videos`);
        
        // Test first video playback
        const firstVideo = youtubeIframes.first();
        await expect(firstVideo).toBeVisible();
        
        // Click on video to test interaction
        await firstVideo.click();
        await page.waitForTimeout(2000);
        console.log('✅ YouTube video interaction tested');
      } else {
        console.log('ℹ️ No YouTube videos found on this page');
      }
    });
  });

  test('🎨 Inspiration page content and media validation', async ({ page }) => {
    await test.step('🌐 Navigate to Inspiration page', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await BrowserUtils.waitForStableLoad(page, 6000);
      
      const inspirationLink = page.getByRole('link', { name: /inspiration/i }).first();
      await expect(inspirationLink).toBeVisible({ timeout: 5000 });
      await inspirationLink.click();
    });

    await test.step('🖼️ Verify content, images, and embedded videos', async () => {
      await page.waitForURL(/.*inspiration.*/, { timeout: 8000 });
      
      // Check images are loaded
      const images = page.locator('img');
      const imageCount = await images.count();
      
      if (imageCount > 0) {
        // Verify first few images are properly loaded
        for (let i = 0; i < Math.min(3, imageCount); i++) {
          const img = images.nth(i);
          const naturalWidth = await img.evaluate((el: HTMLImageElement) => el.naturalWidth);
          if (naturalWidth > 0) {
            console.log(`✅ Image ${i + 1} loaded successfully`);
          }
        }
      }
      
      // Check for embedded videos
      const videos = page.locator('video, iframe[src*="youtube"], iframe[src*="vimeo"]');
      const videoCount = await videos.count();
      console.log(`✅ Found ${videoCount} embedded videos`);
      
      // Verify page content structure
      await expect(page.locator('h1, .page-title, .inspiration-title').first()).toBeVisible();
      console.log('✅ Inspiration page content validated');
    });
  });

  test('🏆 Club page navigation and tab functionality', async ({ page }) => {
    await test.step('🌐 Navigate to Club page', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await BrowserUtils.waitForStableLoad(page, 6000);
      
      const clubLink = page.getByRole('link', { name: /club/i }).first();
      await expect(clubLink).toBeVisible({ timeout: 5000 });
      await clubLink.click();
    });

    await test.step('📋 Verify Club page content and tabs', async () => {
      await page.waitForURL(/.*club.*/, { timeout: 8000 });
      
      // Check for tab elements
      const tabs = page.locator('[role="tab"], .tab, .nav-tab, [class*="tab"]');
      const tabCount = await tabs.count();
      
      if (tabCount > 0) {
        console.log(`✅ Found ${tabCount} tabs on Club page`);
        
        // Click through each tab
        for (let i = 0; i < Math.min(5, tabCount); i++) {
          const tab = tabs.nth(i);
          if (await tab.isVisible({ timeout: 2000 }).catch(() => false)) {
            await tab.click();
            await page.waitForTimeout(1000);
            
            const tabText = await tab.textContent();
            console.log(`✅ Clicked tab: ${tabText}`);
          }
        }
      } else {
        console.log('ℹ️ No tabs found, checking for general content');
      }
      
      // Verify page structure
      await expect(page.locator('h1, .page-title, .club-title').first()).toBeVisible();
      console.log('✅ Club page validated');
    });
  });

  test('🔧 Services page validation', async ({ page }) => {
    await test.step('🌐 Navigate to Services page', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await BrowserUtils.waitForStableLoad(page, 6000);
      
      const servicesLink = page.getByRole('link', { name: /services/i }).first();
      await expect(servicesLink).toBeVisible({ timeout: 5000 });
      await servicesLink.click();
    });

    await test.step('🔗 Validate Services page links', async () => {
      await page.waitForURL(/.*services.*/, { timeout: 8000 });
      
      // Check for service links
      const serviceLinks = page.locator('a[href*="service"], a[href*="hire"], .service-link');
      const linkCount = await serviceLinks.count();
      
      if (linkCount > 0) {
        console.log(`✅ Found ${linkCount} service links`);
        
        // Test first few links
        for (let i = 0; i < Math.min(3, linkCount); i++) {
          const link = serviceLinks.nth(i);
          const href = await link.getAttribute('href');
          if (href && href !== '#') {
            console.log(`✅ Valid service link: ${href}`);
          }
        }
      }
      
      await expect(page.locator('h1, .page-title, .services-title').first()).toBeVisible();
      console.log('✅ Services page validated');
    });
  });

  test('🏢 Trade page validation', async ({ page }) => {
    await test.step('🌐 Navigate to Trade page', async () => {
      await page.goto('https://www.mitre10.co.nz/trade');
      await BrowserUtils.waitForStableLoad(page, 6000);
    });

    await test.step('🔗 Validate Trade page content and links', async () => {
      await expect(page).toHaveURL(/.*trade.*/);
      
      // Check for trade-specific content
      const tradeLinks = page.locator('a[href*="trade"], a[href*="business"], .trade-link');
      const linkCount = await tradeLinks.count();
      
      if (linkCount > 0) {
        console.log(`✅ Found ${linkCount} trade-related links`);
      }
      
      // Verify page structure
      await expect(page.locator('h1, .page-title, .trade-title').first()).toBeVisible();
      console.log('✅ Trade page validated');
    });
  });

  test('🔗 Random link validation across pages', async ({ page }) => {
    const testPages = [
      'https://www.mitre10.co.nz/',
      'https://www.mitre10.co.nz/trade'
    ];

    for (const pageUrl of testPages) {
      await test.step(`🔍 Testing links on ${pageUrl}`, async () => {
        await page.goto(pageUrl);
        await BrowserUtils.waitForStableLoad(page, 6000);
        
        // Get all links
        const allLinks = page.locator('a[href]');
        const linkCount = await allLinks.count();
        
        if (linkCount > 0) {
          // Test random selection of links
          const linksToTest = Math.min(5, linkCount);
          
          for (let i = 0; i < linksToTest; i++) {
            const randomIndex = Math.floor(Math.random() * linkCount);
            const link = allLinks.nth(randomIndex);
            
            const href = await link.getAttribute('href');
            const target = await link.getAttribute('target');
            
            if (href && href !== '#' && !href.startsWith('javascript:')) {
              if (target === '_blank' || href.startsWith('http') && !href.includes('mitre10.co.nz')) {
                console.log(`✅ External link (new tab): ${href}`);
              } else {
                console.log(`✅ Internal link (same tab): ${href}`);
              }
            }
          }
        }
      });
    }
  });

  test('🖼️ Image and media validation across site', async ({ page }) => {
    await test.step('🌐 Navigate to homepage for media check', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await BrowserUtils.waitForStableLoad(page, 8000);
    });

    await test.step('🖼️ Validate images are properly loaded', async () => {
      const images = page.locator('img');
      const imageCount = await images.count();
      let loadedImages = 0;
      
      // Check first 10 images
      for (let i = 0; i < Math.min(10, imageCount); i++) {
        const img = images.nth(i);
        const naturalWidth = await img.evaluate((el: HTMLImageElement) => el.naturalWidth).catch(() => 0);
        
        if (naturalWidth > 0) {
          loadedImages++;
        }
      }
      
      console.log(`✅ ${loadedImages}/${Math.min(10, imageCount)} images loaded successfully`);
      expect(loadedImages).toBeGreaterThan(0);
    });

    await test.step('🎥 Validate YouTube videos are accessible', async () => {
      const youtubeVideos = page.locator('iframe[src*="youtube"], iframe[src*="youtu.be"]');
      const videoCount = await youtubeVideos.count();
      
      if (videoCount > 0) {
        const firstVideo = youtubeVideos.first();
        await expect(firstVideo).toBeVisible();
        
        // Check if video frame loads
        const src = await firstVideo.getAttribute('src');
        expect(src).toBeTruthy();
        console.log(`✅ YouTube video accessible: ${src}`);
      } else {
        console.log('ℹ️ No YouTube videos found on homepage');
      }
    });
  });

  test('🧭 Navigation menu and footer validation', async ({ page }) => {
    await test.step('🌐 Load homepage for navigation check', async () => {
      await page.goto('https://www.mitre10.co.nz/');
      await BrowserUtils.waitForStableLoad(page, 6000);
    });

    await test.step('🧭 Validate main navigation menu', async () => {
      const isMobile = await BrowserUtils.isMobile(page);
      
      if (isMobile) {
        // Check mobile navigation
        const mobileMenuSelectors = [
          'button[aria-label*="menu"]',
          '.hamburger',
          '.menu-button',
          '[class*="mobile-menu"]'
        ];
        
        let mobileNavFound = false;
        for (const selector of mobileMenuSelectors) {
          const element = page.locator(selector).first();
          if (await element.isVisible({ timeout: 2000 }).catch(() => false)) {
            await element.click();
            mobileNavFound = true;
            console.log('✅ Mobile navigation menu accessible');
            break;
          }
        }
        
        if (!mobileNavFound) {
          console.log('ℹ️ Mobile navigation may be hidden (expected behavior)');
        }
      } else {
        // Check desktop navigation
        const navItems = ['Departments', 'Services', 'Club', 'Inspiration'];
        
        for (const item of navItems) {
          const navLink = page.getByRole('link', { name: item }).first();
          if (await navLink.isVisible({ timeout: 2000 }).catch(() => false)) {
            console.log(`✅ Navigation item found: ${item}`);
          }
        }
      }
    });

    await test.step('🦶 Validate footer content and links', async () => {
      const footer = page.locator('footer, .footer, [role="contentinfo"]').first();
      await expect(footer).toBeVisible();
      
      // Check footer links
      const footerLinks = footer.locator('a[href]');
      const footerLinkCount = await footerLinks.count();
      
      if (footerLinkCount > 0) {
        console.log(`✅ Footer contains ${footerLinkCount} links`);
        
        // Test a few footer links
        for (let i = 0; i < Math.min(3, footerLinkCount); i++) {
          const link = footerLinks.nth(i);
          const href = await link.getAttribute('href');
          if (href && href !== '#') {
            console.log(`✅ Footer link: ${href}`);
          }
        }
      }
      
      console.log('✅ Footer validation completed');
    });
  });
});